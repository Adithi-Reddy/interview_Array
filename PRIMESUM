/*
Given an even number ( greater than 2 ), return two prime numbers whose sum will be equal to given number.

NOTE A solution will always exist. read Goldbachâ€™s conjecture

Example:


Input : 4
Output: 2 + 2 = 4

If there are more than one solutions possible, return the lexicographically smaller solution.

If [a, b] is one solution with a <= b,
and [c,d] is another solution with c <= d, then

[a, b] < [c, d] 

If a < c OR a==c AND b < d. */
public class Solution {
    public ArrayList<Integer> primesum(int a) {
        ArrayList<Integer> c = new ArrayList<Integer>();
		if(a<=2) return c;
		if(a==4) {c.add(2);
			return c;}
		boolean[] primes = new boolean[a];
		Arrays.fill(primes, true);
		for (int i = 2; i < a-1; i++) {
			int j=2*i;
			while(j<=a-1){
				if(primes[j])
					primes[j]=false;
				j=j+i;
			}
		}
		for (int i = 2; i < a-1; i++) {
			if(primes[i]&&primes[a-i]){
				c.add(i);
				c.add(a-i);
				return c;
			}
		}
		return c;
    }
}
