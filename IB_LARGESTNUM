import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

public class Solution {
	public String largestNumber(final List<Integer> a) {
		Collections.sort(a,new Comparator<Integer>() {

			public int compare(Integer arg0, Integer arg1) {
				//System.out.println(Integer.parseInt(arg0.toString().concat(arg1.toString())));
				//System.out.println(Integer.parseInt(arg1.toString().concat(arg0.toString())));
				Long max0=Long.parseLong(arg0.toString().concat(arg1.toString()));
				Long max1=Long.parseLong(arg1.toString().concat(arg0.toString()));
				//System.out.println(max0 +" : "+max1);
				int val = max0>max1?-1:1; 
				return val;
			}
		});

		StringBuffer buffer = new StringBuffer();
		for (int i = 0; i < a.size(); i++) {
			buffer.append(a.get(i));
			//System.out.println(a.get(i));
		}
		Long ret;
		try{
		 ret = Long.parseLong(buffer.toString());}
		catch(Exception e){
			return buffer.toString();
		}
		return ret.toString();
	}
}
