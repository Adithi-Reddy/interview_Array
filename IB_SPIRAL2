import java.util.ArrayList;

public class Solution {
	public ArrayList<ArrayList<Integer>> generateMatrix(int a) {
		ArrayList<ArrayList<Integer>> c = new ArrayList<ArrayList<Integer>>();
		ArrayList<Integer> b = new ArrayList<Integer>();
		int n=a*a;
		for (int i = 1; i <=n; i++) {
			b.add(0);
			if(i%a==0) {c.add(b);b=new ArrayList<Integer>();}	
			
		}	
		int level=0,val=1;
		while(level <=a/2){
		for (int i = level; i <a-level ; i++,val++) {			
			c.get(level).set(i,val);
			//System.out.println(c);//"R  i: "+(i)+" j: "+level);
		}for (int i = level+1; i <a-level ; i++,val++) {			
			c.get(i).set(a-level-1,val);
			//System.out.println(c);//"D  i: "+(a-level-1)+" j: "+i);
		}for (int i = a-level-2; i >level-1 ; i--,val++) {			
			c.get(a-level-1).set(i,val);
			//System.out.println(c);//"L  i: "+(i)+" j: "+(a-level-1));
		}for (int i = a-level-2; i >level ; i--,val++) {			
			c.get(i).set(level,val);
			//System.out.println(c);//"U  i: "+(level)+" j: "+i);
		}
		level++;
		
		}
		return c;
	}
	




	public static void main(String[] args){
        /*final List<ArrayList<Integer>> a = new ArrayList<ArrayList<Integer>>() ;
        a.add(new ArrayList<Integer>(){{add(1);add(2);add(7);add(10);}});
        a.add(new ArrayList<Integer>(){{add(3);add(4);add(9);add(11);}});
        a.add(new ArrayList<Integer>() {{add(5);add(6);add(8);add(12);}});
        a.add(new ArrayList<Integer>() {{add(13);add(14);add(15);add(16);}});*/
    	//final List<ArrayList<Integer>> a = new ArrayList<ArrayList<Integer>>() ;
		/*ArrayList<Integer> a=new ArrayList<Integer>(){{add(-1);add(1);add(-1);add(1);add(-1);
		add(2);add(2);add(0);add(1);}};*/
		//ArrayList<Integer> a=new ArrayList<Integer>(){{add(0);add(0);add(0);add(0);add(0);}};
		//ArrayList<Integer> a=new ArrayList<Integer>(){{add(1967513926);add(1540383426);add(-1303455736);add(-521595368);}};
		//ArrayList<Integer> a=new ArrayList<Integer>(){{add(756898537);add(-1973594324);add(-2038664370);add(-184803526);add(1424268980);}};
		/*a.add(new ArrayList<Integer>(){{add(2);}});
        a.add(new ArrayList<Integer>(){{add(3);}});*/
    	/*List<Integer> a = new ArrayList<Integer>();
    	//a.add(-2);a.add(1);a.add(-3);a.add(4);a.add(-1);a.add(2);a.add(1);a.add(-5);a.add(4);
    	//a.add(-412);a.add(-158);a.add(-24);a.add(73);a.add(30);a.add(-389);a.add(-316);a.add(-120);a.add(71);a.add(-406);a.add(-359);a.add(-337);a.add(72);a.add(-358);a.add(-73);a.add(79);a.add(-75);a.add(-186);a.add(-23);a.add(-121);a.add(77);a.add(-399);a.add(-476);a.add(-402);a.add(71);a.add(-332);a.add(10);a.add(-184);a.add(-276);a.add(-466);a.add(0);a.add(-438);a.add(-470);a.add(-409);a.add(-298);a.add(-282);a.add(-143);a.add(-69);a.add(-399);a.add(3);a.add(24);a.add(68);a.add(-248);a.add(-136);a.add(-9);a.add(-496);a.add(-340);a.add(-291);a.add(-281);a.add(-357);a.add(-475);a.add(-17);a.add(-52);a.add(-492);a.add(-70);a.add(-91);a.add(-20);a.add(-373);a.add(-275);a.add(-271);a.add(-349);a.add(-103);a.add(-178);a.add(-388);a.add(-51);a.add(86);a.add(-69);a.add(88);a.add(22);a.add(-134);a.add(-74);a.add(65);a.add(-453);a.add(-239);a.add(-253);a.add(-71);a.add(89);a.add(-456);a.add(-117);a.add(-188);a.add(-191);a.add(-18);a.add(2);a.add(-102);a.add(-60);a.add(24);a.add(85);a.add(-459);a.add(-193);a.add(-295);a.add(-480);a.add(-346);a.add(3);a.add(-43);a.add(-379);a.add(-464);a.add(-481);a.add(-370);a.add(-318);a.add(-156);a.add(-361);a.add(-222);a.add(-347);a.add(80);a.add(-55);a.add(52);a.add(-166);a.add(-369);a.add(-159);a.add(-414);a.add(-365);a.add(9);a.add(-375);a.add(-94);a.add(-364);a.add(-314);a.add(80);a.add(-297);a.add(-271);a.add(-121);a.add(-192);a.add(-119);a.add(76);a.add(-324);a.add(-234);a.add(-41);a.add(17);a.add(-248);a.add(-56);a.add(-78);a.add(-79);a.add(-72);a.add(84);a.add(-38);a.add(-180);a.add(-109);a.add(14);a.add(-377);a.add(-392);a.add(-60);a.add(-409);a.add(-282);a.add(-218);a.add(85);a.add(-493);a.add(-474);a.add(-190);a.add(-177);a.add(-327);a.add(-292);a.add(-385);a.add(-64);a.add(-129);a.add(-219);a.add(-256);a.add(-87);a.add(-383);a.add(-121);a.add(46);a.add(-467);a.add(42);a.add(0);a.add(-194);a.add(-403);a.add(-305);a.add(37);a.add(-410);a.add(-78);a.add(-142);a.add(-288);a.add(54);a.add(45);a.add(-351);a.add(-219);a.add(25);a.add(-27);a.add(-284);a.add(-133);a.add(-80);a.add(-104);a.add(-215);a.add(-468);a.add(-369);a.add(-418);a.add(63);a.add(-357);a.add(-43);a.add(-295);a.add(-57);a.add(28);a.add(-412);a.add(-182);a.add(-489);a.add(-101);a.add(-265);a.add(-451);a.add(-213);a.add(-485);a.add(-178);a.add(43);a.add(-352);a.add(-198);a.add(39);a.add(18);a.add(-24);a.add(-188);a.add(-106);a.add(8);a.add(-377);a.add(-345);a.add(-284);a.add(-497);a.add(-130);a.add(31);a.add(-4);a.add(-283);a.add(-106);a.add(-153);a.add(-166);a.add(-162);a.add(-398);a.add(-188);a.add(-465);a.add(-478);a.add(15);a.add(-300);a.add(-177);a.add(-201);a.add(-170);a.add(-106);a.add(-336);a.add(-312);a.add(-388);a.add(-36);a.add(-390);a.add(70);a.add(-25);a.add(-440);a.add(-181);a.add(-78);a.add(-172);a.add(-359);a.add(-253);a.add(-72);a.add(81);a.add(-117);a.add(-176);a.add(-378);a.add(-263);a.add(-479);a.add(-226);a.add(-161);a.add(62);a.add(-264);a.add(-492);a.add(-332);a.add(-160);a.add(67);a.add(-195);a.add(-265);a.add(11);a.add(-96);a.add(-133);a.add(-301);a.add(-282);a.add(-395);a.add(8);a.add(-78);a.add(-365);a.add(-325);a.add(-394);a.add(-199);a.add(-88);a.add(-496);a.add(100);a.add(-147);a.add(-476);a.add(-18);a.add(-480);a.add(85);a.add(-407);a.add(-131);a.add(100);a.add(-109);a.add(-165);a.add(-419);a.add(-309);a.add(-170);a.add(50);a.add(4);a.add(-469);a.add(-433);a.add(55);a.add(-458);a.add(-216);a.add(-149);a.add(-137);a.add(12);a.add(95);a.add(-153);a.add(-44);a.add(-125);a.add(-18);a.add(74);a.add(-499);a.add(-391);a.add(17);a.add(-119);a.add(7);a.add(-149);a.add(-377);a.add(-274);a.add(-499);a.add(-255);a.add(-278);a.add(-455);a.add(-389);a.add(-101);a.add(-148);a.add(-251);a.add(-273);a.add(-458);a.add(-215);a.add(-295);a.add(-122);a.add(-500);a.add(-32);a.add(-197);a.add(-499);a.add(-374);a.add(-409);a.add(-342);a.add(-219);a.add(-460);a.add(-439);a.add(-399);a.add(-289);a.add(-53);a.add(-458);a.add(-203);a.add(-108);a.add(-422);a.add(-185);a.add(-336);a.add(-435);a.add(29);a.add(-484);a.add(-16);a.add(-83);a.add(-205);a.add(-191);a.add(-444);a.add(36);a.add(-482);a.add(0);a.add(-364);a.add(-224);a.add(94);a.add(-270);a.add(-38);a.add(64);a.add(-203);a.add(-328);a.add(-204);a.add(50);a.add(-413);a.add(-143);a.add(-434);a.add(-174);a.add(24);a.add(-17);a.add(-324);a.add(-292);a.add(48);a.add(-384);a.add(-120);a.add(-152);a.add(-382);a.add(-10);a.add(-62);a.add(-361);a.add(-214);a.add(-361);a.add(-41);a.add(-163);a.add(-402);a.add(42);a.add(-194);a.add(5);a.add(37);a.add(39);a.add(28);a.add(-286);a.add(-280);a.add(-104);a.add(28);a.add(-218);a.add(-386);a.add(-51);a.add(13);a.add(-97);a.add(-161);a.add(-131);a.add(-171);a.add(-376);a.add(-228);a.add(-168);a.add(-12);a.add(-426);a.add(-234);a.add(-323);a.add(-438);a.add(84);a.add(-235);a.add(-445);a.add(82);a.add(-51);a.add(-227);a.add(-306);a.add(58);a.add(-482);a.add(-3);a.add(-258);a.add(-465);a.add(65);a.add(-214);a.add(-55);a.add(-376);a.add(-94);a.add(-227);a.add(92);a.add(49);a.add(-334);a.add(46);a.add(-462);a.add(-282);a.add(79);a.add(7);a.add(-400);a.add(-435);a.add(-107);a.add(-93);a.add(77);a.add(-194);a.add(-290);a.add(-144);a.add(79);a.add(-477);a.add(-140);a.add(-154);a.add(-237);a.add(-35);a.add(-333);a.add(-257);a.add(-39);a.add(-359);a.add(-232);a.add(-71);a.add(-247);a.add(-388);a.add(-22);a.add(-282);a.add(-163);a.add(-193);a.add(-445);a.add(-66);a.add(86);a.add(-340);a.add(-200);a.add(-38);a.add(-256);a.add(-218);a.add(-170);a.add(-486);a.add(-387);a.add(16);a.add(-79);a.add(-235);a.add(-283);a.add(-479);a.add(-449);a.add(44);a.add(-254);a.add(-266);a.add(63);a.add(75);a.add(-418);a.add(-494);a.add(-65);a.add(-87);a.add(66);a.add(-402);a.add(94);a.add(-276);a.add(-452);a.add(-488);a.add(-438);a.add(-441);a.add(-77);a.add(-52);a.add(-54);a.add(-408);a.add(-472);a.add(-8);a.add(-150);a.add(88);a.add(-127);a.add(98);a.add(-159);a.add(-10);a.add(24);a.add(-484);a.add(-138);a.add(-323);a.add(-117);a.add(-118);a.add(30);a.add(-458);a.add(60);a.add(-33);a.add(-462);a.add(-301);a.add(76);a.add(-102);a.add(-262);a.add(-338);a.add(-224);a.add(8);a.add(-87);a.add(14);a.add(-154);a.add(-340);a.add(-152);a.add(-124);a.add(-55);a.add(-126);a.add(-457);a.add(-366);a.add(81);a.add(-441);a.add(-79);a.add(-365);a.add(-417);a.add(-192);a.add(-14);a.add(-406);a.add(74);a.add(-216);a.add(-269);a.add(-346);a.add(56);a.add(57);a.add(-171);a.add(-339);a.add(-157);a.add(-436);a.add(-340);a.add(-139);a.add(28);a.add(-82);a.add(-235);a.add(-269);a.add(-31);a.add(-370);a.add(-136);a.add(-289);a.add(-110);a.add(-440);a.add(-320);a.add(-306);a.add(-319);a.add(88);a.add(-409);a.add(10);a.add(-9);a.add(-257);a.add(-58);a.add(-390);a.add(-148);a.add(46);a.add(-162);a.add(-439);a.add(-145);a.add(-376);a.add(-430);a.add(-116);a.add(-303);a.add(-60);a.add(-80);a.add(-453);a.add(-17);a.add(-230);a.add(-157);a.add(89);a.add(-215);a.add(-492);a.add(-280);a.add(-263);a.add(70);a.add(-495);a.add(-236);a.add(34);a.add(-107);a.add(-400);a.add(-455);a.add(-347);a.add(-376);a.add(-128);a.add(-56);a.add(36);a.add(-483);a.add(-375);a.add(-44);a.add(-400);a.add(-24);a.add(-23);a.add(-27);a.add(-130);a.add(-264);a.add(50);a.add(-15);
    	a.add(-340);a.add(-128);a.add(-307);a.add(-480);a.add(-420);a.add(-80);a.add(52);a.add(-185);a.add(-308);a.add(-275);a.add(-13);a.add(49);a.add(-153);a.add(-86);a.add(-122);a.add(3);a.add(-368);a.add(-1);a.add(-6);a.add(-292);a.add(-22);a.add(-207);a.add(-275);a.add(-19);a.add(-460);a.add(-341);a.add(-201);a.add(83);a.add(-216);a.add(-118);a.add(-496);a.add(-97);a.add(-208);a.add(88);a.add(-14);a.add(-263);a.add(-265);a.add(-428);a.add(-102);a.add(-41);a.add(-268);a.add(81);a.add(69);a.add(34);a.add(-401);a.add(93);a.add(-116);a.add(-197);a.add(-121);a.add(-93);a.add(-63);a.add(-390);a.add(26);a.add(-42);a.add(-491);a.add(74);a.add(-497);a.add(-3);a.add(71);a.add(-399);a.add(-239);a.add(84);a.add(-335);a.add(-464);a.add(-451);a.add(-21);a.add(-337);a.add(-457);a.add(-77);a.add(-109);a.add(-313);a.add(-22);a.add(-386);a.add(-51);a.add(-271);a.add(-203);a.add(-181);a.add(-153);a.add(-165);a.add(-306);a.add(76);a.add(-322);a.add(62);a.add(-325);a.add(54);a.add(-222);a.add(-187);a.add(-385);a.add(-398);a.add(-57);a.add(-152);a.add(63);a.add(-467);a.add(-5);a.add(-269);a.add(-344);a.add(-199);a.add(21);a.add(-223);a.add(-339);a.add(91);a.add(67);a.add(-394);a.add(-396);a.add(-78);a.add(-138);a.add(-227);a.add(-84);a.add(-235);a.add(91);a.add(-417);a.add(-27);a.add(-56);a.add(-122);a.add(-313);a.add(-122);a.add(-327);a.add(14);a.add(-192);a.add(-250);a.add(-433);a.add(-399);a.add(52);a.add(-363);a.add(-471);a.add(-438);a.add(-455);a.add(-404);a.add(-5);a.add(-498);a.add(-293);a.add(-133);a.add(42);a.add(-222);a.add(-306);a.add(73);a.add(-272);a.add(-176);a.add(-230);a.add(-217);a.add(-225);a.add(-245);a.add(-64);a.add(-406);a.add(-172);a.add(-144);a.add(-404);a.add(-379);a.add(-133);a.add(-49);a.add(-124);a.add(-304);a.add(-50);a.add(87);a.add(-326);a.add(-115);a.add(-44);a.add(-83);a.add(-351);a.add(-126);a.add(21);a.add(-252);a.add(-203);a.add(68);a.add(-343);a.add(-6);a.add(-25);a.add(-260);a.add(-429);a.add(-472);a.add(-288);a.add(-215);a.add(-56);a.add(-96);a.add(-430);a.add(-474);a.add(55);a.add(-265);a.add(-385);a.add(-180);a.add(-238);a.add(85);a.add(-144);a.add(-114);a.add(-183);a.add(-53);a.add(-418);a.add(-266);a.add(-498);a.add(-84);a.add(-358);a.add(-247);a.add(-484);a.add(-144);a.add(-58);a.add(-278);a.add(96);a.add(-204);a.add(-266);a.add(-332);a.add(70);a.add(-479);a.add(-181);a.add(-343);a.add(-166);a.add(-84);a.add(-176);a.add(-156);a.add(18);a.add(-339);a.add(-404);a.add(-17);a.add(-428);a.add(-455);a.add(-121);a.add(39);a.add(67);a.add(-271);a.add(-4);a.add(35);a.add(-364);a.add(-144);a.add(-165);a.add(-488);a.add(-96);a.add(-64);a.add(-425);a.add(-171);a.add(93);a.add(-5);a.add(-405);a.add(-323);a.add(-499);a.add(-437);a.add(-416);a.add(-350);a.add(-460);a.add(-273);a.add(-39);a.add(-237);a.add(-24);a.add(-57);a.add(-151);a.add(-449);a.add(-242);a.add(-426);a.add(-498);a.add(80);a.add(21);a.add(-344);a.add(-276);a.add(-41);a.add(-421);a.add(-214);a.add(46);a.add(-174);a.add(-197);a.add(-51);a.add(-317);a.add(-51);a.add(95);a.add(-200);a.add(100);a.add(-434);a.add(-121);a.add(-130);a.add(-176);a.add(-195);a.add(55);a.add(-129);a.add(14);a.add(45);a.add(-53);a.add(-287);a.add(-213);a.add(-70);a.add(-427);a.add(-354);a.add(-97);a.add(-367);a.add(-277);a.add(-111);a.add(-350);a.add(-151);a.add(-387);a.add(-260);a.add(-392);a.add(-68);a.add(-396);a.add(-396);a.add(-397);a.add(-429);a.add(-335);a.add(-333);a.add(-417);a.add(-55);a.add(-8);a.add(-44);a.add(-388);a.add(-133);a.add(-404);a.add(-497);a.add(-332);a.add(-485);a.add(94);a.add(43);a.add(4);a.add(-334);a.add(-269);a.add(-406);a.add(-90);a.add(-44);a.add(-22);a.add(-343);a.add(-437);a.add(-419);a.add(99);a.add(-2);a.add(-228);a.add(-345);a.add(-351);a.add(-118);a.add(99);a.add(-381);a.add(-177);a.add(-356);a.add(40);a.add(-12);a.add(-319);a.add(-110);a.add(45);a.add(-396);a.add(-61);a.add(61);a.add(-287);a.add(-336);a.add(-106);a.add(-182);a.add(-344);a.add(-45);a.add(-61);a.add(-120);a.add(-473);a.add(-139);a.add(-166);a.add(21);a.add(-350);a.add(14);a.add(-445);a.add(-457);a.add(-348);a.add(-228);a.add(-376);a.add(-199);a.add(-353);a.add(-394);a.add(-284);a.add(-474);a.add(-6);a.add(-229);a.add(-40);a.add(-164);a.add(-287);a.add(-361);a.add(-171);a.add(-462);a.add(-460);a.add(-246);a.add(52);a.add(-453);a.add(-146);a.add(-253);a.add(-21);a.add(91);a.add(-390);a.add(60);a.add(-177);a.add(-250);a.add(-286);a.add(12);a.add(3);a.add(-307);a.add(-340);a.add(32);a.add(-45);a.add(-49);a.add(-357);a.add(23);a.add(21);a.add(-359);a.add(-28);a.add(-92);a.add(-485);a.add(-207);a.add(20);a.add(-480);a.add(-142);a.add(-411);a.add(-240);a.add(-287);a.add(-430);a.add(92);a.add(-56);a.add(-358);a.add(-60);a.add(-51);a.add(-121);a.add(-176);a.add(36);a.add(-218);a.add(-295);a.add(-4);a.add(-6);a.add(54);a.add(-325);a.add(-225);a.add(64);a.add(-121);a.add(-303);a.add(-91);a.add(-361);a.add(-371);a.add(-300);a.add(-232);a.add(-457);a.add(-40);a.add(-84);a.add(-241);a.add(57);a.add(-46);a.add(-230);a.add(-438);a.add(-23);a.add(80);a.add(-38);a.add(-395);a.add(-340);a.add(-348);a.add(-301);a.add(-400);a.add(-371);a.add(-451);a.add(-207);a.add(-392);a.add(-280);a.add(-260);a.add(-433);a.add(-239);a.add(-185);a.add(-205);a.add(-330);a.add(-484);a.add(-309);a.add(-351);a.add(-76);a.add(-358);a.add(-198);a.add(-337);a.add(-316);a.add(-132);a.add(-126);a.add(-28);a.add(19);a.add(-45);a.add(-16);a.add(-132);a.add(-451);a.add(-418);a.add(-90);a.add(-479);a.add(-217);a.add(22);a.add(-212);a.add(-222);a.add(86);a.add(-303);a.add(-398);a.add(-47);a.add(70);a.add(-441);a.add(-387);a.add(-315);a.add(-46);a.add(-369);a.add(22);a.add(-35);a.add(-83);a.add(54);a.add(-54);a.add(25);a.add(-57);a.add(-211);a.add(-397);a.add(-32);a.add(-100);a.add(-354);a.add(-303);a.add(-401);a.add(-48);a.add(-333);a.add(-30);a.add(-96);a.add(81);a.add(11);a.add(-362);a.add(-76);a.add(-83);a.add(-98);a.add(-231);a.add(78);a.add(-236);a.add(79);a.add(94);a.add(69);a.add(-114);a.add(-446);a.add(-204);a.add(-414);a.add(-60);a.add(59);a.add(-153);a.add(-485);a.add(87);a.add(-233);a.add(-464);a.add(-455);a.add(-9);a.add(-53);a.add(-192);a.add(-235);a.add(32);a.add(-318);a.add(-186);a.add(-271);a.add(-87);a.add(-457);a.add(-461);a.add(-75);a.add(-45);a.add(-415);a.add(-404);a.add(54);a.add(-389);a.add(-406);a.add(-371);a.add(-63);a.add(-339);a.add(92);a.add(35);a.add(-284);a.add(-60);a.add(-370);a.add(1);a.add(-79);a.add(-57);a.add(-268);a.add(76);a.add(-137);a.add(-259);a.add(-8);a.add(-76);a.add(-84);a.add(3);a.add(97);a.add(-312);a.add(-197);a.add(-115);a.add(-256);a.add(-60);a.add(-58);a.add(31);a.add(-141);a.add(-11);a.add(-116);a.add(-324);a.add(-219);a.add(-222);a.add(-101);a.add(-341);a.add(-329);a.add(-409);a.add(-460);a.add(-16);a.add(78);a.add(-141);a.add(-428);a.add(-350);a.add(-29);a.add(-44);a.add(-127);a.add(-32);a.add(-283);a.add(-467);a.add(-386);a.add(-288);a.add(-16);a.add(-278);a.add(-240);a.add(-284);a.add(-259);a.add(-382);a.add(-368);a.add(-62);a.add(-441);a.add(16);a.add(-117);a.add(-81);a.add(-311);a.add(-494);a.add(-221);a.add(-97);a.add(-396);a.add(-402);a.add(63);a.add(-371);a.add(-109);a.add(-375);a.add(-449);a.add(100);a.add(63);a.add(50);a.add(-194);a.add(-290);a.add(1);a.add(-412);a.add(-457);a.add(-308);a.add(56);a.add(-306);a.add(18);a.add(-93);a.add(-177);a.add(44);a.add(11);a.add(-72);a.add(-73);a.add(-481);a.add(-460);a.add(5);a.add(-313);a.add(21);a.add(-460);a.add(-42);a.add(-106);a.add(-340);a.add(-27);a.add(-158);a.add(59);a.add(-377);a.add(-91);a.add(7);a.add(-491);a.add(-305);a.add(-74);a.add(-347);a.add(-437);a.add(-275);a.add(-152);a.add(-166);a.add(-222);a.add(-238);a.add(54);a.add(-216);a.add(-276);a.add(-265);a.add(21);a.add(-309);a.add(-10);a.add(73);a.add(-10);a.add(93);a.add(13);a.add(-457);a.add(-263);a.add(-358);a.add(-386);a.add(-409);a.add(-350);a.add(85);a.add(-216);a.add(24);a.add(-255);a.add(-209);a.add(-86);a.add(-438);a.add(-121);a.add(-220);a.add(-450);a.add(-136);a.add(-55);a.add(-62);a.add(-172);a.add(-416);a.add(38);a.add(-175);a.add(-77);a.add(-278);a.add(-476);a.add(-137);a.add(-457);a.add(-45);a.add(-390);a.add(-226);a.add(-188);a.add(-185);a.add(-164);a.add(-406);a.add(-423);a.add(-355);a.add(-376);a.add(-312);a.add(11);a.add(-363);a.add(-234);
        */Solution s= new Solution();
        ArrayList<ArrayList<Integer>> b = s.generateMatrix(5);
        for (ArrayList<Integer> inp:
             b) {
        	for (Integer in:
               inp) {
            System.out.print(in +" ");}
        	System.out.println();
        }
    }

}

