public class Solution {
    // X and Y co-ordinates of the points in order.
    // Each point is represented by (X.get(i), Y.get(i))
    public int coverPoints(ArrayList<Integer> X, ArrayList<Integer> Y) {
    	int total=0;
    	for (int i = 0; i < X.size()-1; i++) {
			int x1 = X.get(i);
			int x2 = X.get(i+1);
			int y1 = Y.get(i);
			int y2 = Y.get(i+1);
			total+=shortDist(x1,y1,x2,y2);
		}
    	return total;
    }

    private int shortDist(int x1, int y1, int x2, int y2) {
		int l=Math.abs(x2-x1);
		int w =Math.abs(y2-y1);
		int dist = l>w?l:w; // shortest distance between two points is the length of the longest side
		return dist;
	}
}
